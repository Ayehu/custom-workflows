<?xml version="1.0" encoding="utf-8"?>
<Workflow>
  <WorkflowInfo Name="SSH - Linux - List Processes" Description="Simple template using the ps command to retrieve a list of all running processes.  The results are converted to a table with ten columns ('USER', 'PID', '%CPU', '%MEM', 'VSZ', 'RSS', 'TTY', 'STAT', 'START', 'TIME', and 'COMMAND')." Details="&lt;p&gt;Simple template using the ps command to retrieve a list of all running processes.&amp;nbsp;The results are converted to a table with ten columns (&lt;strong&gt;USER&lt;/strong&gt;, &lt;strong&gt;PID&lt;/strong&gt;, &lt;strong&gt;%CPU&lt;/strong&gt;, &lt;strong&gt;%MEM&lt;/strong&gt;, &lt;strong&gt;VSZ&lt;/strong&gt;, &lt;strong&gt;RSS&lt;/strong&gt;, &lt;strong&gt;TTY&lt;/strong&gt;, &lt;strong&gt;STAT&lt;/strong&gt;, &lt;strong&gt;START&lt;/strong&gt;, &lt;strong&gt;TIME&lt;/strong&gt;, and &lt;strong&gt;COMMAND&lt;/strong&gt;).&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;This is achieved with the following command:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ps aux | awk '{ print $1&quot;\t&quot;$2&quot;\t&quot;$3&quot;\t&quot;$4&quot;\t&quot;$5&quot;\t&quot;$6&quot;\t&quot;$7&quot;\t&quot;$8&quot;\t&quot;$9&quot;\t&quot;$10&quot;\t&quot;$11 }'&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;...where &lt;strong&gt;ps &lt;/strong&gt;is executed with the &lt;strong&gt;aux &lt;/strong&gt;flags to see all process details (called &quot;BSD style&quot;) and pipe output to &lt;strong&gt;awk &lt;/strong&gt;where all 11 columns are separated by a tab.&lt;/p&gt;" XML="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;SequentialWorkflowActivity xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/workflow&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; x:Name=&quot;CustomWorkflow&quot; x:Class=&quot;WorkflowDesignerControl.CustomWorkflow&quot;&gt;&lt;StartSSHSession x:Name=&quot;ssh_connect&quot; id=&quot;274&quot; name=&quot;StartSSHSession&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Start SSH Session&quot; Description=&quot;Starts an SSH session&quot; Port=&quot;22&quot; MaxSessionTime=&quot;00:10:00&quot; HostId=&quot;4&quot; HostName=&quot;local shell server&quot; UserName=&quot;&quot; Password=&quot;&quot; StartSession=&quot;SSH&quot; OSType=&quot;0&quot; certtype=&quot;&quot; certpath=&quot;&quot; notes=&quot;Initialize SSH session.&quot; TypeName=&quot;StartSSHSession&quot; /&gt;&lt;SendSSHCommand x:Name=&quot;cmd_list_proc&quot; id=&quot;271&quot; name=&quot;SendSSHCommand&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Send SSH Command&quot; Description=&quot;Sends a single SSH protocol command to an open SSH session&quot; SessionName=&quot;ssh_connect&quot; Comm=&quot;ps aux | awk '{ print $1&amp;quot;\t&amp;quot;$2&amp;quot;\t&amp;quot;$3&amp;quot;\t&amp;quot;$4&amp;quot;\t&amp;quot;$5&amp;quot;\t&amp;quot;$6&amp;quot;\t&amp;quot;$7&amp;quot;\t&amp;quot;$8&amp;quot;\t&amp;quot;$9&amp;quot;\t&amp;quot;$10&amp;quot;\t&amp;quot;$11 }'&quot; Prompt=&quot;&quot; HostId=&quot;-1&quot; HostName=&quot;{x:Null}&quot; OSType=&quot;0&quot; notes=&quot;Execute the top command to retrieve CPU usage information, where the -n 1 flag for top allows the program to exit after one iteration, rather than be ran in its default interactive mode. The output is then piped to grep to filter the line containing the string Cpu. That output is finally piped to awk where the first column is ignored, piped to awk again where custom labels are used for the first column of each row (i.e. User, System, etc.) and a tab is added before the second column on each row that printed.&quot; TypeName=&quot;SendSSHCommand&quot; /&gt;&lt;ConvertTextToTable x:Name=&quot;table_list_proc&quot; id=&quot;317&quot; name=&quot;ConvertTextToTable&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; IsValid=&quot;True&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;Convert Text to Table&quot; Description=&quot;Converts a text variable into a table according to predefined column/row delimiters&quot; TheValue=&quot;%cmd_list_proc%&quot; ColumnsSelection=&quot;1&quot; ColumnsDelimiterText=&quot;&quot; ColumnsDelimiter=&quot;Tab&quot; ColumnsDelimiterSelection=&quot;Tab&quot; ColumnsRowNumber=&quot;1&quot; RowsSelection=&quot;1&quot; RowsDelimiterText=&quot;&quot; RowsDelimiterSelection=&quot;Carriage Return&quot; RowsDelimiter=&quot;Carriage Return&quot; notes=&quot;Convert command output to table.&quot; TypeName=&quot;ConvertTextToTable&quot; /&gt;&lt;TerminateSSHSession x:Name=&quot;ssh_disconnect&quot; id=&quot;275&quot; name=&quot;TerminateSSHSession&quot; visible=&quot;True&quot; disabled=&quot;False&quot; isFavorite=&quot;False&quot; IsValid=&quot;True&quot; notes=&quot;End SSH session.&quot; Timeout=&quot;00:01:00&quot; TimeInSeconds=&quot;60&quot; RecoveryMethodSelection=&quot;{x:Null}&quot; TargetModuleID=&quot;&quot; TargetModuleName=&quot;&quot; Path=&quot;{x:Null}&quot; DisplayName=&quot;&quot; Description=&quot;Terminates an SSH session&quot; SessionName=&quot;ssh_connect&quot; HostId=&quot;-1&quot; HostName=&quot;{x:Null}&quot; OSType=&quot;0&quot; TypeName=&quot;TerminateSSHSession&quot; /&gt;&lt;/SequentialWorkflowActivity&gt;" />
  <Tags>
  </Tags>
</Workflow>